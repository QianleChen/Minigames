class ChessGame:
    def __init__(self):
        self.board = [
            ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],
            ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
            ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],
            ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']
        ]
        self.current_player = 'white'

    def print_board(self):
        for row in self.board:
            print(' '.join(row))

    def is_valid_move(self, start, end):
        # Check if the start and end positions are on the board
        if not (0 <= start[0] <= 7 and 0 <= start[1] <= 7 and 0 <= end[0] <= 7 and 0 <= end[1] <= 7):
            return False

        # Check if there's a piece at the starting position
        if self.board[start[0]][start[1]] == ' ':
            return False

        # Check if the piece at the starting position belongs to the current player
        if self.current_player == 'white' and self.board[start[0]][start[1]].islower():
            return False
        if self.current_player == 'black' and self.board[start[0]][start[1]].isupper():
            return False

        # Add logic for specific piece moves
        # For now, we'll just return True for any move
        return True

    def make_move(self, start, end):
        if self.is_valid_move(start, end):
            piece = self.board[start[0]][start[1]]
            self.board[start[0]][start[1]] = ' '
            self.board[end[0]][end[1]] = piece
            self.current_player = 'black' if self.current_player == 'white' else 'white'
            return True
        else:
            return False

if __name__ == "__main__":
    game = ChessGame()
    game.print_board()

    while True:
        start = tuple(map(int, input("Enter start position (row, col): ").split(',')))
        end = tuple(map(int, input("Enter end position (row, col): ").split(',')))

        if game.make_move(start, end):
            game.print_board()
        else:
            print("Invalid move. Try again.")
